scale_shape_manual(values = shape_mapping, name = "Body Part:") + #6
scale_colour_gradientn(colors = shotmapxgcolors, limits = c(0, 1)) +
guides(fill = guide_colourbar(title.position = "top"), title = NULL, shape = guide_legend(override.aes = list(size = 5, fill = "black")), colour = FALSE) + #7
coord_flip(xlim = c(85, 125), ylim = c(0, 80)) #8
return(ShotPlots)
}
# Plot for each player in the StrikerDataset
players <- unique(StrikerDataset$PlayerName)
players_data_list <- lapply(players, function(x)
{
subset(WWC23Data, player.name == x)
})
SDShotPlots <- lapply(players_data_list, PlayerShotPlots)
View(SDShotPlots)
SDShotPlots
View(FilteredSoG)
source("~/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/B1701Assessment2/B1701Assessment2Analysis.R", echo=TRUE)
View(SDShotPlots)
SDShotPlots
source("~/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/B1701Assessment2/B1701Assessment2AnalysisNEWBRANCH.R", echo=TRUE)
Top5AtletiCompFinalnpxGA90 <-  ggplot(Top5AtletiComparisonsFinal, aes(x = npxGA90, y = npGA90, label = Player)) +
geom_text(check_overlap = FALSE, hjust = 0.5, vjust = -0.5) +
geom_point() +
geom_smooth(method = lm, color = "red") +
labs(x = "Non-penalty Expected Goals + Assists per 90 minutes (npxGA90)",
y = "Non-penalty Goals + Assists per 90 minutes (npGA90)",
title = "Player Comparison of npGA90 vs npxGA90") +
scale_x_continuous(breaks = seq(floor(min(Top5AtletiComparisonsFinal$npGA90)), ceiling(max(Top5AtletiComparisonsFinal$npGA90)), by = 0.1)) +
theme_minimal() +
theme(legend.position = "right")
Top5AtletiCompFinalnpxGA90
warnings()
DianiPassesDensitymap
Top5AtletiCompFinalnpxGA90 <-  ggplot(Top5AtletiComparisonsFinal, aes(x = npxGA90, y = npGA90, label = Player)) +
geom_text(check_overlap = FALSE, hjust = 0.5, vjust = -0.5) +
geom_point() +
geom_smooth(method = lm, color = "red") +
labs(x = "Non-penalty Expected Goals + Assists per 90 minutes (npxGA90)",
y = "Non-penalty Goals + Assists per 90 minutes (npGA90)",
title = "Player Comparison of npGA90 vs npxGA90") +
scale_x_continuous(breaks = seq(floor(min(Top5AtletiComparisonsFinal$npGA90)), ceiling(max(Top5AtletiComparisonsFinal$npGA90)), by = 0.1)) +
theme_minimal() +
theme(legend.position = "right")
Top5AtletiCompFinalnpxGA90
Top5AtletiCompFinalnpxGA90 <-  ggplot(Top5AtletiComparisonsFinal, aes(x = npxGA90, y = npGA90, label = Player)) +
geom_text(check_overlap = FALSE, hjust = 0.5, vjust = -0.5) +
geom_point() +
geom_smooth(method = lm, color = "red") +
labs(x = "Non-penalty Expected Goals + Assists per 90 minutes (npxGA90)",
y = "Non-penalty Goals + Assists per 90 minutes (npGA90)",
title = "Player Comparison of npGA90 vs npxGA90") +
scale_x_continuous(breaks = seq(floor(min(Top5AtletiComparisonsFinal$npGA90)), ceiling(max(Top5AtletiComparisonsFinal$npGA90)), by = 0.1)) +
theme_minimal() +
theme(legend.position = "right")
Top5AtletiCompFinalnpxGA90
FiltKPICorrelation <-cor(FilteredFinalSD[,c(2:6)],use="complete.obs")
corrplot(FiltKPICorrelation, method="color")
FiltKPICorr1 <- FilteredFinalSD %>% cor_test(FiltPBoxShotSum, FiltGandASum)
print(FiltKPICorr1)
# Code to select our top 5 players
FilteredFinalSDTop5 <- FilteredFinalSD %>%
semi_join(Top5AtletiComparisons2, by = c("player.name" = "Player"))
# Define the columns to normalize
columns_to_normalize <- c("FiltGandASum","FiltSatGSum","FiltPassSum","FiltPassTypeSum","FiltPBoxShotSum")
# Compute the maximum values for the specified columns
max_values <- apply(FilteredFinalSDTop5[,columns_to_normalize], 2, max,na.rm=TRUE)
# Normalize the specified columns (column values / max_values)
normalized_columns <- sweep(FilteredFinalSDTop5[, columns_to_normalize], 2, max_values, "/")
colnames(normalized_columns) <- paste('Norm', colnames(normalized_columns), sep = '_')
# Add the normalized columns back to the TopCyclist data frame
FilteredFinalSDTop5 <- cbind(FilteredFinalSDTop5, normalized_columns)
radar_data <- FilteredFinalSDTop5[,c("Norm_FiltGandASum", "Norm_FiltSatGSum", "Norm_FiltPassSum", "Norm_FiltPassTypeSum", "Norm_FiltPBoxShotSum", "player.name")]
radar_data <- data.frame(FiltGandASum = c(1, 0, radar_data$Norm_FiltGandASum),
FiltSatGSum = c(1, 0, radar_data$Norm_FiltSatGSum),
FiltPassSum = c(1, 0, radar_data$Norm_FiltPassSum),
FiltPassTypeSum = c(1, 0, radar_data$Norm_FiltPassTypeSum),
FiltPBoxShotSum = c(1,0, radar_data$Norm_FiltPBoxShotSum),
row.names=c("max","min",as.character(radar_data$player.name)))
# Create the radar chart
radar_plot <- radarchart(
radar_data)
legend(1.1,0,
legend=rownames(radar_data)[3:nrow(radar_data)],
col=1:(nrow(radar_data)-2),
cex=0.8,
lwd=3)
AtletinpGAnpxGGA <- ggplot(AtletiPDFiltStat, aes(x = npxGA, y = npGA, label = Player)) +
geom_text(check_overlap = FALSE, hjust = 0.5, vjust = -0.5) +
geom_point() +
geom_smooth(method = lm, color = "red") +
labs(x = "Non-penalty Expected Goals + Assists (npxGA)",
y = "Non-penalty Goals + Assists (npGA)",
title = "Player Comparison of npxGA vs npGA") +
theme_minimal() +
theme(legend.position = "right")
AtletinpGAnpxGGA
AtletinpGA90npxGGA90 <-  ggplot(AtletiPDFiltStat, aes(x = npxGA90, y = npGA90, label = Player)) +
geom_text(check_overlap = FALSE, hjust = 0.5, vjust = -0.5) +
geom_point() +
geom_smooth(method = lm, color = "red") +
labs(x = "Non-penalty Expected Goals + Assists per 90 minutes (npxGA90)",
y = "Non-penalty Goals + Assists per 90 minutes (npGA90)",
title = "Player Comparison of npGA90 vs npxGA90") +
scale_x_continuous(breaks = seq(floor(min(AtletiPDFiltStat$npGA90)), ceiling(max(AtletiPDFiltStat$npGA90)), by = 0.1)) +
theme_minimal() +
theme(legend.position = "right")
AtletinpGA90npxGGA90
View(AtletiPD)
AtletiPD2 <- read_xlsx("/Users/seanmccrone/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/Atletico Madrid Data.xlsx")
head(AtletiPD2)
View(AtletiPD2)
AtletiPD2 <- read_xlsx("/Users/seanmccrone/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/Atletico Madrid Data.xlsx")
View(AtletiPD2)
View(MatchesPlayed)
View(TotalMinutesPlayed)
View(TotalMinutesPlayed)
WorldCupPlayers <- WWC23Data %>%
group_by(player.name)
View(WorldCupPlayers)
WorldCupPlayers <- WWC23Data %>%
distinct(player.name) %>%
arrange(player.name)
View(WorldCupPlayers)
View(AtletiPD)
View(SDAssistPlots)
SDAssistPlots[[9]]
SDAssistPlots[[16]]
SDAssistPlots[[18]]
SDAssistPlots[[24]]
BlomqvistPassesSucUnsuc <- WWC23PassesFiltered %>%
filter(player.name == "Rebecka Blomqvist" & type.name == "Pass") %>%
mutate(
pass_successful = is.na(pass.outcome.name), # If 'pass.outcome.name' is NA, it's a successful pass
pass_type = case_when(
pass_successful ~ "Successful",
TRUE ~ "Unsuccessful"
)
)
View(BlomqvistPassesSucUnsuc)
BlomqvistPassesSucUnsuc <- WWC23PassesFiltered %>%
filter(player.name == "Rebecka Blomqvist" & type.name == "Pass") %>%
mutate(
pass_successful = is.na(pass.outcome.name), # If 'pass.outcome.name' is NA, it's a successful pass
pass_type = case_when(
pass_successful ~ "Successful",
TRUE ~ "Unsuccessful"
)
)
create_Pitch() +
geom_segment(data = BlomqvistPassesSucUnsuc, aes(x = location.x, y = location.y,
xend = pass.end_location.x, yend = pass.end_location.y, color = pass_type),
lineend = "round", size = 0.3, arrow = arrow(length = unit(0.03, "inches"))) +
scale_color_manual(values = c("Successful" = "black", "Unsuccessful" = "red"), name = "Pass Outcome") +
labs(title = "Passes by Rebecka Blomqvist", subtitle = "WWC23") +
scale_y_reverse() +
coord_fixed(ratio = 80/120)
DianiPasses <- WWC23PassesFiltered %>%
filter(player.name == "Kadidiatou Diani" & type.name == "Pass") %>%
mutate(
pass_successful = if_else(is.na(pass.outcome.name), "Successful", "Unsuccessful"),
pass_type = case_when(
pass.goal_assist == TRUE ~ "Goal Assist",
pass.shot_assist == TRUE ~ "Shot Assist",
pass.cross == TRUE ~ "Cross",
pass.through_ball == TRUE ~ "Through ball",
pass.switch == TRUE ~ "Switch",
pass.cut_back == TRUE ~ "Cut Back",
TRUE ~ "Other"
)
)
create_Pitch() +
geom_segment(data = DianiPasses, aes(x = location.x, y = location.y,
xend = pass.end_location.x, yend = pass.end_location.y,
color = pass_type), lineend = "round", size = 0.3,
arrow = arrow(length = unit(0.03, "inches"))) +
scale_color_manual(values = c("Goal Assist" = "green", "Shot Assist" = "blue",
"Cross" = "purple", "Through ball" = "orange", "Switch" = "yellow", "Cut Back" = "red",
"Other" = "black"),
name = "Pass Type") +
labs(title = "Kadidiatou Diani, All Passes by Type", subtitle = "WWC23") +
scale_y_reverse() +
coord_fixed(ratio = 80/120)
DianiPassesDensity <- WWC23Data %>%
filter(player.name == "Kadidiatou Diani" & type.name == "Pass")
DianiPassesDensitymap <- create_Pitch() +
stat_density_2d(
data = DianiPassesDensity,
aes(x = location.x, y = location.y, fill = ..level.., alpha = ..level..),
geom = "polygon",
bins = 50
) +
scale_fill_viridis_c(name = "Pass Density") +
scale_alpha(range = c(0.1, 0.7), guide = FALSE) +
scale_y_reverse() +
coord_fixed(ratio = 80 / 120) +
labs(title = "Pass Heatmap for Kadidiatou Diani", subtitle = "Density of Pass Locations")
DianiPassesDensitymap
source("~/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/B1701Assessment2/B1701Assessment2Analysis.R", echo=TRUE)
source("~/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/B1701Assessment2/B1701Assessment2Analysis.R", echo=TRUE)
Top5AtletiCompFinalnpxGA90 <-  ggplot(Top5AtletiComparisonsFinal, aes(x = npxGA90, y = npGA90, label = Player)) +
geom_text(check_overlap = FALSE, hjust = 0.5, vjust = -0.5) +
geom_point() +
geom_smooth(method = lm, color = "red") +
labs(x = "Non-penalty Expected Goals + Assists per 90 minutes (npxGA90)",
y = "Non-penalty Goals + Assists per 90 minutes (npGA90)",
title = "Player Comparison of npGA90 vs npxGA90") +
scale_x_continuous(breaks = seq(floor(min(Top5AtletiComparisonsFinal$npGA90)), ceiling(max(Top5AtletiComparisonsFinal$npGA90)), by = 0.1)) +
theme_minimal() +
theme(legend.position = "right")
Top5AtletiCompFinalnpxGA90
View(AtletinpGA90)
View(Top5AtletiComparisonsFinal)
View(Top5AtletiComparison)
View(Top5AtletiComparisons2)
View(StrikerDataset)
View(StrikerDatasetConditions)
View(FilteredFinalSDTop5)
View(AtletiPDFiltStat)
View(Top5AtletiComparisonsFinal)
View(SDPenaltyBoxShotPlots)
View(FilteredFinalSD)
SDPenaltyBoxShotPlots[[59]]
View(SDGoalPlots)
SDGoalPlots[[35, 60]]
SDGoalPlots[[35:60]]
SDGoalPlots[[59]]
View(SDAssistPlots)
SDAssistPlots[[59]]
View(SDPenaltyBoxShotPlots)
SDPenaltyBoxShotPlots[[59]]
View(SDShotPlots)
SDShotPlots[[59]]
PlayerShotPlots <- function(WWC23Data) {
player_shots <-  WWC23Data[which(WWC23Data$type.name == "Shot",
filter(period != 5)), ]
ShotPlots <- ggplot() +
annotate("rect", xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "black", size = 0.6)+
annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
theme(rect = element_blank(), line = element_blank()) + # add penalty spot right
annotate("point", x = 108 , y = 40, colour = "black", size = 1.05) +
annotate("path", colour = "black", size = 0.6, x=60+10*cos(seq(0,2*pi,length.out=2000)),
y=40+10*sin(seq(0,2*pi,length.out=2000)))+ # add centre spot
annotate("point", x = 60 , y = 40, colour = "black", size = 1.05) +
annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
annotate("path", x=107.84-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
geom_point(data = player_shots, aes(x = location.x, y = location.y, fill = shot.statsbomb_xg, shape = shot.body_part.name), size = 4, alpha = 0.8) + #3
geom_segment(data = player_shots, aes(x = location.x, y = location.y, xend = shot.end_location.x, yend = shot.end_location.y, colour = shot.statsbomb_xg), size = 1, alpha = 0.8) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.caption= element_text(size=13,family="serif", hjust=0.5, vjust=0.5),
plot.subtitle = element_text(size = 18, family="serif", hjust = 0.5),
axis.text.y = element_blank(), legend.position = "top",
legend.title = element_text(size=22, family="serif"),
legend.text = element_text(size=20, family="serif"),
legend.margin = margin(c(20, 10, -85, 50)),
legend.key.size = unit(1, "cm"),
plot.title = element_text(margin = margin(r = 10, b = 10), face="bold",size = 26, family="serif", colour = "black", hjust = 0.5),
legend.direction = "horizontal",
axis.ticks = element_blank(), aspect.ratio = c(65/100),
plot.background = element_rect(fill = "white"), strip.text.x = element_text(size=12,family="serif")) +
labs(title = paste("Player Shot Map, WWC23:", unique(WWC23Data[["player.name"]]))) + #4
scale_fill_gradientn(colors = shotmapxgcolors, limits = c(0, 1), name = "Shot xG:",
breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1")) + #5
scale_shape_manual(values = shape_mapping, name = "Body Part:") + #6
scale_colour_gradientn(colors = shotmapxgcolors, limits = c(0, 1)) +
guides(fill = guide_colourbar(title.position = "top"), title = NULL, shape = guide_legend(override.aes = list(size = 5, fill = "black")), colour = FALSE) + #7
coord_flip(xlim = c(85, 125), ylim = c(0, 80)) #8
return(ShotPlots)
}
# Plot for each player in the StrikerDataset
players <- unique(StrikerDataset$PlayerName)
players_data_list <- lapply(players, function(x)
{
subset(WWC23Data, player.name == x)
})
SDShotPlots <- lapply(players_data_list, PlayerShotPlots)
PlayerShotPlots <- function(WWC23Data) {
player_shots <-  WWC23Data[which(WWC23Data$type.name == "Shot",
period != 5), ]
ShotPlots <- ggplot() +
annotate("rect", xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "black", size = 0.6)+
annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
theme(rect = element_blank(), line = element_blank()) + # add penalty spot right
annotate("point", x = 108 , y = 40, colour = "black", size = 1.05) +
annotate("path", colour = "black", size = 0.6, x=60+10*cos(seq(0,2*pi,length.out=2000)),
y=40+10*sin(seq(0,2*pi,length.out=2000)))+ # add centre spot
annotate("point", x = 60 , y = 40, colour = "black", size = 1.05) +
annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
annotate("path", x=107.84-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
geom_point(data = player_shots, aes(x = location.x, y = location.y, fill = shot.statsbomb_xg, shape = shot.body_part.name), size = 4, alpha = 0.8) + #3
geom_segment(data = player_shots, aes(x = location.x, y = location.y, xend = shot.end_location.x, yend = shot.end_location.y, colour = shot.statsbomb_xg), size = 1, alpha = 0.8) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.caption= element_text(size=13,family="serif", hjust=0.5, vjust=0.5),
plot.subtitle = element_text(size = 18, family="serif", hjust = 0.5),
axis.text.y = element_blank(), legend.position = "top",
legend.title = element_text(size=22, family="serif"),
legend.text = element_text(size=20, family="serif"),
legend.margin = margin(c(20, 10, -85, 50)),
legend.key.size = unit(1, "cm"),
plot.title = element_text(margin = margin(r = 10, b = 10), face="bold",size = 26, family="serif", colour = "black", hjust = 0.5),
legend.direction = "horizontal",
axis.ticks = element_blank(), aspect.ratio = c(65/100),
plot.background = element_rect(fill = "white"), strip.text.x = element_text(size=12,family="serif")) +
labs(title = paste("Player Shot Map, WWC23:", unique(WWC23Data[["player.name"]]))) + #4
scale_fill_gradientn(colors = shotmapxgcolors, limits = c(0, 1), name = "Shot xG:",
breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1")) + #5
scale_shape_manual(values = shape_mapping, name = "Body Part:") + #6
scale_colour_gradientn(colors = shotmapxgcolors, limits = c(0, 1)) +
guides(fill = guide_colourbar(title.position = "top"), title = NULL, shape = guide_legend(override.aes = list(size = 5, fill = "black")), colour = FALSE) + #7
coord_flip(xlim = c(85, 125), ylim = c(0, 80)) #8
return(ShotPlots)
}
# Plot for each player in the StrikerDataset
players <- unique(StrikerDataset$PlayerName)
players_data_list <- lapply(players, function(x)
{
subset(WWC23Data, player.name == x)
})
SDShotPlots <- lapply(players_data_list, PlayerShotPlots)
PlayerShotPlots <- function(WWC23Data) {
player_shots <-  WWC23Data[which(WWC23Data$type.name == "Shot"), ]
ShotPlots <- ggplot() +
annotate("rect", xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "black", size = 0.6)+
annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
theme(rect = element_blank(), line = element_blank()) + # add penalty spot right
annotate("point", x = 108 , y = 40, colour = "black", size = 1.05) +
annotate("path", colour = "black", size = 0.6, x=60+10*cos(seq(0,2*pi,length.out=2000)),
y=40+10*sin(seq(0,2*pi,length.out=2000)))+ # add centre spot
annotate("point", x = 60 , y = 40, colour = "black", size = 1.05) +
annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
annotate("path", x=107.84-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
geom_point(data = player_shots, aes(x = location.x, y = location.y, fill = shot.statsbomb_xg, shape = shot.body_part.name), size = 4, alpha = 0.8) + #3
geom_segment(data = player_shots, aes(x = location.x, y = location.y, xend = shot.end_location.x, yend = shot.end_location.y, colour = shot.statsbomb_xg), size = 1, alpha = 0.8) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.caption= element_text(size=13,family="serif", hjust=0.5, vjust=0.5),
plot.subtitle = element_text(size = 18, family="serif", hjust = 0.5),
axis.text.y = element_blank(), legend.position = "top",
legend.title = element_text(size=22, family="serif"),
legend.text = element_text(size=20, family="serif"),
legend.margin = margin(c(20, 10, -85, 50)),
legend.key.size = unit(1, "cm"),
plot.title = element_text(margin = margin(r = 10, b = 10), face="bold",size = 26, family="serif", colour = "black", hjust = 0.5),
legend.direction = "horizontal",
axis.ticks = element_blank(), aspect.ratio = c(65/100),
plot.background = element_rect(fill = "white"), strip.text.x = element_text(size=12,family="serif")) +
labs(title = paste("Player Shot Map, WWC23:", unique(WWC23Data[["player.name"]]))) + #4
scale_fill_gradientn(colors = shotmapxgcolors, limits = c(0, 1), name = "Shot xG:",
breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1")) + #5
scale_shape_manual(values = shape_mapping, name = "Body Part:") + #6
scale_colour_gradientn(colors = shotmapxgcolors, limits = c(0, 1)) +
guides(fill = guide_colourbar(title.position = "top"), title = NULL, shape = guide_legend(override.aes = list(size = 5, fill = "black")), colour = FALSE) + #7
coord_flip(xlim = c(85, 125), ylim = c(0, 80)) #8
return(ShotPlots)
}
# Plot for each player in the StrikerDataset
players <- unique(StrikerDataset$PlayerName)
players_data_list <- lapply(players, function(x)
{
subset(WWC23Data, player.name == x)
})
SDShotPlots <- lapply(players_data_list, PlayerShotPlots)
PlayerShotPlots <- function(WWC23Data) {
player_shots <-  WWC23Data[which(WWC23Data$type.name == "Shot"), ]
ShotPlots <- ggplot() +
annotate("rect", xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "black", size = 0.6)+
annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
theme(rect = element_blank(), line = element_blank()) + # add penalty spot right
annotate("point", x = 108 , y = 40, colour = "black", size = 1.05) +
annotate("path", colour = "black", size = 0.6, x=60+10*cos(seq(0,2*pi,length.out=2000)),
y=40+10*sin(seq(0,2*pi,length.out=2000)))+ # add centre spot
annotate("point", x = 60 , y = 40, colour = "black", size = 1.05) +
annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
annotate("path", x=107.84-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
geom_point(data = player_shots, aes(x = location.x, y = location.y, fill = shot.statsbomb_xg, shape = shot.body_part.name), size = 4, alpha = 0.8) + #3
geom_segment(data = player_shots, aes(x = location.x, y = location.y, xend = shot.end_location.x, yend = shot.end_location.y, colour = shot.statsbomb_xg), size = 1, alpha = 0.8) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.caption= element_text(size=13,family="serif", hjust=0.5, vjust=0.5),
plot.subtitle = element_text(size = 18, family="serif", hjust = 0.5),
axis.text.y = element_blank(), legend.position = "top",
legend.title = element_text(size=22, family="serif"),
legend.text = element_text(size=20, family="serif"),
legend.margin = margin(c(20, 10, -85, 50)),
legend.key.size = unit(1, "cm"),
plot.title = element_text(margin = margin(r = 10, b = 10), face="bold",size = 26, family="serif", colour = "black", hjust = 0.5),
legend.direction = "horizontal",
axis.ticks = element_blank(), aspect.ratio = c(65/100),
plot.background = element_rect(fill = "white"), strip.text.x = element_text(size=12,family="serif")) +
labs(title = paste("Player Shot Map, WWC23:", unique(WWC23Data[["player.name"]]))) + #4
scale_fill_gradientn(colors = shotmapxgcolors, limits = c(0, 1), name = "Shot xG:",
breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1")) + #5
scale_shape_manual(values = shape_mapping, name = "Body Part:") + #6
scale_colour_gradientn(colors = shotmapxgcolors, limits = c(0, 1)) +
guides(fill = guide_colourbar(title.position = "top"), title = NULL, shape = guide_legend(override.aes = list(size = 5, fill = "black")), colour = FALSE) + #7
coord_flip(xlim = c(85, 125), ylim = c(0, 80)) #8
return(ShotPlots)
}
# Plot for each player in the StrikerDataset
players <- unique(StrikerDataset$PlayerName)
players_data_list <- lapply(players, function(x)
{
subset(WWC23Data, player.name == x)
})
SDShotPlots <- lapply(players_data_list, PlayerShotPlots)
View(SDShotPlots)
PlayerShotPlots <- function(WWC23Data) {
player_shots <-  WWC23Data[which(WWC23Data$type.name == "Shot"), ]
ShotPlots <- ggplot() +
annotate("rect", xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "black", size = 0.6)+
annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
theme(rect = element_blank(), line = element_blank()) + # add penalty spot right
annotate("point", x = 108 , y = 40, colour = "black", size = 1.05) +
annotate("path", colour = "black", size = 0.6, x=60+10*cos(seq(0,2*pi,length.out=2000)),
y=40+10*sin(seq(0,2*pi,length.out=2000)))+ # add centre spot
annotate("point", x = 60 , y = 40, colour = "black", size = 1.05) +
annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
annotate("path", x=107.84-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
geom_point(data = player_shots, aes(x = location.x, y = location.y, fill = shot.statsbomb_xg, shape = shot.body_part.name), size = 4, alpha = 0.8) + #3
geom_segment(data = player_shots, aes(x = location.x, y = location.y, xend = shot.end_location.x, yend = shot.end_location.y, colour = shot.statsbomb_xg), size = 1, alpha = 0.8) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.caption= element_text(size=13,family="serif", hjust=0.5, vjust=0.5),
plot.subtitle = element_text(size = 18, family="serif", hjust = 0.5),
axis.text.y = element_blank(), legend.position = "top",
legend.title = element_text(size=22, family="serif"),
legend.text = element_text(size=20, family="serif"),
legend.margin = margin(c(20, 10, -85, 50)),
legend.key.size = unit(1, "cm"),
plot.title = element_text(margin = margin(r = 10, b = 10), face="bold",size = 26, family="serif", colour = "black", hjust = 0.5),
legend.direction = "horizontal",
axis.ticks = element_blank(), aspect.ratio = c(65/100),
plot.background = element_rect(fill = "white"), strip.text.x = element_text(size=12,family="serif")) +
labs(title = paste("Player Shot Map, WWC23:", unique(WWC23Data[["player.name"]]))) + #4
scale_fill_gradientn(colors = shotmapxgcolors, limits = c(0, 1), name = "Shot xG:",
breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1")) + #5
scale_shape_manual(values = shape_mapping, name = "Body Part:") + #6
scale_colour_gradientn(colors = shotmapxgcolors, limits = c(0, 1)) +
guides(fill = guide_colourbar(title.position = "top"), title = NULL, shape = guide_legend(override.aes = list(size = 5, fill = "black")), colour = FALSE) + #7
coord_flip(xlim = c(85, 125), ylim = c(0, 80)) #8
return(ShotPlots)
}
players <- unique(StrikerDataset$PlayerName)
players_data_list <- lapply(players, function(x)
{
subset(WWC23Data, player.name == x)
})
SDShotPlots <- lapply(players_data_list, PlayerShotPlots)
source("~/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/B1701Assessment2/B1701Assessment2Analysis.R", echo=TRUE)
source("~/Desktop/MASTERS DEGREE/Course Material/B1701/Assessment 2/B1701Assessment2/B1701Assessment2Analysis.R", echo=TRUE)
View(SDShotPlots)
